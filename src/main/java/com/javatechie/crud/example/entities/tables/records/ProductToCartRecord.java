/*
 * This file is generated by jOOQ.
 */
package com.javatechie.crud.example.entities.tables.records;


import com.javatechie.crud.example.entities.tables.ProductToCart;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductToCartRecord extends UpdatableRecordImpl<ProductToCartRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rest_api.product_to_cart.CartID</code>.
     */
    public ProductToCartRecord setCartid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>rest_api.product_to_cart.CartID</code>.
     */
    public Integer getCartid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>rest_api.product_to_cart.ProductID</code>.
     */
    public ProductToCartRecord setProductid(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>rest_api.product_to_cart.ProductID</code>.
     */
    public Integer getProductid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rest_api.product_to_cart.ProductQuantity</code>.
     */
    public ProductToCartRecord setProductquantity(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>rest_api.product_to_cart.ProductQuantity</code>.
     */
    public Integer getProductquantity() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ProductToCart.PRODUCT_TO_CART.CARTID;
    }

    @Override
    public Field<Integer> field2() {
        return ProductToCart.PRODUCT_TO_CART.PRODUCTID;
    }

    @Override
    public Field<Integer> field3() {
        return ProductToCart.PRODUCT_TO_CART.PRODUCTQUANTITY;
    }

    @Override
    public Integer component1() {
        return getCartid();
    }

    @Override
    public Integer component2() {
        return getProductid();
    }

    @Override
    public Integer component3() {
        return getProductquantity();
    }

    @Override
    public Integer value1() {
        return getCartid();
    }

    @Override
    public Integer value2() {
        return getProductid();
    }

    @Override
    public Integer value3() {
        return getProductquantity();
    }

    @Override
    public ProductToCartRecord value1(Integer value) {
        setCartid(value);
        return this;
    }

    @Override
    public ProductToCartRecord value2(Integer value) {
        setProductid(value);
        return this;
    }

    @Override
    public ProductToCartRecord value3(Integer value) {
        setProductquantity(value);
        return this;
    }

    @Override
    public ProductToCartRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductToCartRecord
     */
    public ProductToCartRecord() {
        super(ProductToCart.PRODUCT_TO_CART);
    }

    /**
     * Create a detached, initialised ProductToCartRecord
     */
    public ProductToCartRecord(Integer cartid, Integer productid, Integer productquantity) {
        super(ProductToCart.PRODUCT_TO_CART);

        setCartid(cartid);
        setProductid(productid);
        setProductquantity(productquantity);
    }

    /**
     * Create a detached, initialised ProductToCartRecord
     */
    public ProductToCartRecord(com.javatechie.crud.example.entities.tables.pojos.ProductToCart value) {
        super(ProductToCart.PRODUCT_TO_CART);

        if (value != null) {
            setCartid(value.getCartid());
            setProductid(value.getProductid());
            setProductquantity(value.getProductquantity());
        }
    }
}
