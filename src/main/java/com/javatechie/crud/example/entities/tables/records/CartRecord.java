/*
 * This file is generated by jOOQ.
 */
package com.javatechie.crud.example.entities.tables.records;


import com.javatechie.crud.example.entities.tables.Cart;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CartRecord extends UpdatableRecordImpl<CartRecord> implements Record2<Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>rest_api.cart.CartID</code>.
     */
    public CartRecord setCartid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>rest_api.cart.CartID</code>.
     */
    public Integer getCartid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>rest_api.cart.OrderDate</code>.
     */
    public CartRecord setOrderdate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>rest_api.cart.OrderDate</code>.
     */
    public LocalDateTime getOrderdate() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, LocalDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Cart.CART.CARTID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Cart.CART.ORDERDATE;
    }

    @Override
    public Integer component1() {
        return getCartid();
    }

    @Override
    public LocalDateTime component2() {
        return getOrderdate();
    }

    @Override
    public Integer value1() {
        return getCartid();
    }

    @Override
    public LocalDateTime value2() {
        return getOrderdate();
    }

    @Override
    public CartRecord value1(Integer value) {
        setCartid(value);
        return this;
    }

    @Override
    public CartRecord value2(LocalDateTime value) {
        setOrderdate(value);
        return this;
    }

    @Override
    public CartRecord values(Integer value1, LocalDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CartRecord
     */
    public CartRecord() {
        super(Cart.CART);
    }

    /**
     * Create a detached, initialised CartRecord
     */
    public CartRecord(Integer cartid, LocalDateTime orderdate) {
        super(Cart.CART);

        setCartid(cartid);
        setOrderdate(orderdate);
    }

    /**
     * Create a detached, initialised CartRecord
     */
    public CartRecord(com.javatechie.crud.example.entities.tables.pojos.Cart value) {
        super(Cart.CART);

        if (value != null) {
            setCartid(value.getCartid());
            setOrderdate(value.getOrderdate());
        }
    }
}
